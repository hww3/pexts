#!/usr/bin/make -f
# Sample debian/rules that uses debhelper. 
# GNU copyright 1997 by Joey Hess.
#
# This version is for a hypothetical package that builds an
# architecture-dependant package, as well as an architecture-independent
# package.

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
#export DH_COMPAT=2

# This has to be exported to make some magic below work.
export DH_OPTIONS

PIKE=/usr/bin/pike$(PVER)
PIKE72=/usr/bin/pike7.2
PIKE74=/usr/bin/pike7.4
PIKE_CHANGELOG=/usr/share/doc/pike$(PVER)/changelog.Debian.gz
PIKE_VERSION=$(shell $(PIKE) -e 'string v; int rel;sscanf(version(), "Pike v%s release %d", v, rel); write(v+"."+rel);')
PIKE_VERSION72=$(shell $(PIKE72) -e 'string v; int rel;sscanf(version(), "Pike v%s release %d", v, rel); write(v+"."+rel);')
PIKE_VERSION74=$(shell $(PIKE74) -e 'string v; int rel;sscanf(version(), "Pike v%s release %d", v, rel); write(v+"."+rel);')
CVS_SNAPSHOT=$(shell if test -x configure; then echo no; else echo yes; fi)
PIKE_DEBIAN_VER=$(shell gunzip -c $(PIKE_CHANGELOG) | head -1 | sed -e 's/\(.*(\)\(.*\)\().*\)/\2/')

CFLAGS=-O2 -fPIC
# Temporary workaround for hppa linker issues
ifeq ($(DEB_BUILD_ARCH),hppa)
CFLAGS+=-ffunction-sections
endif
ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

export CFLAGS PVER

configure: configure-stamp-72 configure-stamp-74

configure-stamp-72:
	$(MAKE) -fdebian/rules PVER=7.2 do-configure-common
	touch $@

configure-stamp-74:
	$(MAKE) -fdebian/rules PVER=7.4 do-configure-common
	touch $@

apply-patches:
	if [ ! -f patched-stamp ]; then \
	  for f in $(CURDIR)/debian/patches/*.diff; do \
	      patch -p1 -f --no-backup-if-mismatch -d $(CURDIR) < $$f ; \
	  done ; \
	fi
	touch patched-stamp

unapply-patches:
	-if [ -f patched-stamp ]; then \
	    for f in $(CURDIR)/debian/patches/*.diff; do \
		patch -R -p1 -f --no-backup-if-mismatch -d $(CURDIR) < $$f ; \
	    done ; \
	    rm -f patched-stamp ; \
	fi

do-configure-common:
	dh_testdir	
	# Add here commands to configure the package.
	if test "$(CVS_SNAPSHOT)" = "yes"; then \
	    ./autogen.sh; \
	fi
	./configure --prefix=/usr \
	             --with-pike=$(PIKE) \
		     --without-_esmtp \
		     --without-_FDF \
		     --without-PDF \
		     --without-_BerkeleyDB \
		     --without-Newt \
		     --without-gpgme \
		     --without-mnoGo \
		     --without-OpenSSL \
		     --without-OpenLDAP \
		     --without-_XML \
		     --without-mcast \
		     --without-Mailstore \
		     --without-FNV \
		     --without-ferite \
		     --without-AVS \
		     --with-GeoIP \
		     --with-bzip2

build: apply-patches build-stamp-72 build-stamp-74

build-stamp-72: configure-stamp-72
	$(MAKE) -fdebian/rules PVER=7.2 do-build
	$(MAKE) -fdebian/rules PVER=7.2 inter-install
	$(MAKE) -fdebian/rules PVER=7.2 inter-clean
	touch $@

build-stamp-74: configure-stamp-74
	$(MAKE) -fdebian/rules PVER=7.4 do-build
	$(MAKE) -fdebian/rules PVER=7.4 inter-install
	$(MAKE) -fdebian/rules PVER=7.4 inter-clean
	touch $@

do-build:
	dh_testdir
	# Add here commands to compile the package.
	$(MAKE)

	touch build-stamp

inter-clean:
	-$(MAKE) spotless
	-rm -f src/PCRE/pcrelib/dftables
	-rm -f `find -name ".cvsignore" -type f -print`
	-rm -rf `find -name "CVS" -type d -print`
	-rm -f smartlink statuslock
	dh_clean

clean: unapply-patches inter-clean
	dh_testdir
	rm -f build-stamp-72 configure-stamp-72 build-stamp-74 configure-stamp-74 patched-stamp
	rm -f configure config.h.in config.log configure.ac
	rm -rf debian/pike7.2 debian/pike7.4 debian/pike

inter-install:
	dh_testdir
	dh_clean -k
	dh_installdirs -A
	install -d -m 755 $(CURDIR)/debian/pike/usr/lib/pike/$(PIKE_VERSION)/lib/modules
	$(MAKE) install DESTDIR=$(CURDIR)/debian/pike/
	install -d -m 755 $(CURDIR)/debian/pike$(PVER)-pexts-newt/usr/lib/pike/$(PIKE_VERSION)/lib/modules/Newt.pmod/
	cp -pr pmod/Newt.pmod/* $(CURDIR)/debian/pike$(PVER)-pexts-newt/usr/lib/pike/$(PIKE_VERSION)/lib/modules/Newt.pmod/

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs -A
	dh_movefiles --sourcedir=debian/pike/

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
#binary-indep: DH_OPTIONS=-i
binary-indep: build install
	# Need this version of debhelper for DH_OPTIONS to work.
#	dh_testversion 1.1.17
#	dh_testdir 
#	dh_testroot 
#	dh_installdebconf
#	dh_installdocs 
#	dh_installmenu
#	dh_installemacsen
#	dh_installpam
#	dh_installinit
#	dh_installcron
#	dh_installmanpages
#	dh_installinfo
#	dh_undocumented
#	dh_installchangelogs 
#	dh_link
#	dh_compress
#	dh_fixperms 
#	# You may want to make some executables suid here.
#	dh_suidregister
#	dh_installdeb
#	dh_perl
#	dh_gencontrol -u"-Vpikever=$(PIKE_DEBIAN_VER)"
#	dh_md5sums 
#	dh_builddeb 

# Build architecture-dependent files here.
# Pass -a to all debhelper commands in this target to reduce clutter.
binary-arch: DH_OPTIONS=-a
binary-arch: build install
	# Need this version of debhelper for DH_OPTIONS to work.
#	dh_testversion 1.1.17
	dh_testdir
	dh_testroot
#	dh_installdebconf
	dh_installdocs
#	dh_installmenu
#	dh_installemacsen
#	dh_installpam
#	dh_installinit
#	dh_installcron
#	dh_installmanpages
#	dh_installinfo
#	dh_undocumented
	dh_installexamples
	dh_installchangelogs 
	dh_strip
	dh_link
	dh_compress
	dh_fixperms
	# You may want to make some executables suid here.
#	dh_suidregister
	dh_installdeb
#	dh_makeshlibs
#	dh_perl
	dh_shlibdeps
	dh_gencontrol -u"-Vpikever72=$(PIKE_VERSION72) -Vpikever74=$(PIKE_VERSION74)"
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
