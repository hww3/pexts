# @configure_input@
SRCDIR=@srcdir@
VPATH=@srcdir@
prefix=@prefix@
DESTDIR=

@SET_MAKE@

INSTALL=@INSTALL@
CC=@CC@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
PIKE=@PIKE@
PIKE_VERISON=@PIKE_VERSION@
# Used to avoid make compatibility problems.
BIN_TRUE=":"
#extern tools
all:	src 
	-@$(BIN_TRUE)

src: force
	@(cd src;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" all)

force:
	-@$(BIN_TRUE)

depend:
	-@(cd src/;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" depend)

clean:
	rm -f config.h
	@(cd src;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" clean)
	@(cd src/PCRE/pcrelib;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" clean)

install: all install_only 
	-@$(BIN_TRUE)

install_only: 
	@(cd src;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" DESTDIR="$(DESTDIR)" INSTALL="$(INSTALL)" install)
	@echo "Pike Extension modules installed."

spotless:  clean
	@(cd src/;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" spotless)
	@(cd src/PCRE/pcrelib;$(MAKE) "prefix=$(prefix)" "CC=$(CC)" "LDFLAGS=$(LDFLAGS)" spotless)
	rm -f Makefile
	rm -f config.h.in
	find . '(' -name '#*#' -o -name '*~' -o -name '.*~' -o -name '*.bak'\
        -o -name '.pine-debug*' -o -name '.*.bak' -o -name core -o -name \
	config.cache -o -name config.status -o -name config.log -o -name \
	"*.a" -o -name configure ')'  -print -exec /bin/rm '{}'  ';'
	find . -name 'autom4te.cache' -print | xargs /bin/rm -rf

./Makefile: $(SRCDIR)/Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS="" ./config.status
	@echo "Run make again"
	@exit 1

bump_version.stamp:
	@touch bump_version.stamp

bump_version: bump_version.stamp
	@if test -f $(SRCDIR)/server/base_server/caudium.pike.new; then \
	  echo Deleting old $(SRCDIR)/server/base_server/caudium.pike.new...; \
	  rm $(SRCDIR)/server/base_server/caudium.pike.new || exit 1; \
	else : ; fi

$(SRCDIR)/ChangeLog.gz:
	cd $(SRCDIR); pike tools/make_changelog.pike | gzip -9 > ChangeLog.gz

